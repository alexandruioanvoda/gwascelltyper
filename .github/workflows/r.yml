# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

on:
  push:
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.bioc }} - ${{ matrix.config.image }})

    strategy:
      fail-fast: false
      matrix:
        config:
#          - { os: windows-latest, bioc: 'release'}
#          - { os: windows-latest, bioc: 'devel'}
          - { os: macOS-latest, bioc: 'release'}
#          - { os: macOS-latest, bioc: 'devel'} 
          - { os: ubuntu-latest, bioc: 'release'}
#          - { os: ubuntu-latest, bioc: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up R
        uses: grimbough/bioc-actions/setup-bioc@v1
        if: matrix.config.image == null
        with:
          bioc-version: ${{ matrix.config.bioc }}

      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck, optparse, BiocManager

      - name: Install BiocCheck
        if: runner.os == 'Linux'
        run: BiocManager::install("BiocCheck")
        shell: Rscript {0}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@master
        if: matrix.config.image == null

#      - name: Check
#        uses: r-lib/actions/check-r-package@v1

#      - name: BiocCheck
#        if: runner.os == 'Linux'
#        run: BiocCheck::BiocCheck(dir('check', 'tar.gz$', full.names = TRUE), `quit-with-status` = TRUE)
#        shell: Rscript {0}

#      - name: Show testthat output
#        if: always()
#        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
#        shell: bash

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
        run: |
          install.packages("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: CRAN Check
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error")
        shell: Rscript {0}
        
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-results
          path: check
